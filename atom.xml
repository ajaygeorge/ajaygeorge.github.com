<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ajay George Code Blog]]></title>
  <link href="http://ajaygeorge.github.com/atom.xml" rel="self"/>
  <link href="http://ajaygeorge.github.com/"/>
  <updated>2013-03-17T00:57:47+05:30</updated>
  <id>http://ajaygeorge.github.com/</id>
  <author>
    <name><![CDATA[Ajay George]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[First among Equals]]></title>
    <link href="http://ajaygeorge.github.com/blog/2013/03/17/first-among-equals/"/>
    <updated>2013-03-17T00:37:00+05:30</updated>
    <id>http://ajaygeorge.github.com/blog/2013/03/17/first-among-equals</id>
    <content type="html"><![CDATA[<p>Much has been told about the <code>Equals</code> method in java. It&#8217;s importance along with <code>hashCode</code> is well documented.</p>

<p>The contract of equals method states that it should be</p>

<blockquote><p>Reflexive, Symmetric, Transitive and Consistent.</p></blockquote>

<p>Symmetry sounds easy, but could be extremely hard to get right.</p>

<p>The <code>CaseInsensitive</code> String example in Effective Java Item 8 is an excellent discussion on the same. Read it if you haven&#8217;t read it already.</p>

<p>I was quite surprised to find the equals implementation broken in the <a href="https://jira.mongodb.org/browse/JAVA-609">MongoDB Java Driver</a>.</p>

<p>The equals Implementation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>public boolean equals( Object o ){
</span><span class='line'>
</span><span class='line'>    if ( this == o )
</span><span class='line'>        return true;
</span><span class='line'>
</span><span class='line'>    ObjectId other = massageToObjectId( o );
</span><span class='line'>    if ( other == null )
</span><span class='line'>        return false;
</span><span class='line'>
</span><span class='line'>    return
</span><span class='line'>        _time == other._time &&
</span><span class='line'>        _machine == other._machine &&
</span><span class='line'>        _inc == other._inc;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>The culprit is the massageToObjectId method used in the equals Implementation.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/** Turn an object into an &lt;code&gt;ObjectId&lt;/code&gt;, if possible.
</span><span class='line'> * Strings will be converted into &lt;code&gt;ObjectId&lt;/code&gt;s, if possible, and &lt;code&gt;ObjectId&lt;/code&gt;s will
</span><span class='line'> * be cast and returned.  Passing in &lt;code&gt;null&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.
</span><span class='line'> * @param o the object to convert
</span><span class='line'> * @return an &lt;code&gt;ObjectId&lt;/code&gt; if it can be massaged, null otherwise
</span><span class='line'> */
</span><span class='line'>public static ObjectId massageToObjectId( Object o ){
</span><span class='line'>    if ( o == null )
</span><span class='line'>        return null;
</span><span class='line'>
</span><span class='line'>    if ( o instanceof ObjectId )
</span><span class='line'>        return (ObjectId)o;
</span><span class='line'>
</span><span class='line'>    if ( o instanceof String ){
</span><span class='line'>        String s = o.toString();
</span><span class='line'>        if ( isValid( s ) )
</span><span class='line'>            return new ObjectId( s );
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    return null;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Switching off Camel Case in Octopress]]></title>
    <link href="http://ajaygeorge.github.com/blog/2012/09/19/switching-off-camel-case-in-octopress/"/>
    <updated>2012-09-19T22:21:00+05:30</updated>
    <id>http://ajaygeorge.github.com/blog/2012/09/19/switching-off-camel-case-in-octopress</id>
    <content type="html"><![CDATA[<p>Ever wondered how to switch off <a href="http://en.wikipedia.org/wiki/CamelCase">Camel Case</a> in Octopress?. By default Octopress has Camel case switched on for both pages and titles, which could be a bit annoying at times.<br/>
<a href="https://github.com/imathis">imathis</a> just committed an update using which you can switch off Camel Case. View the commit details <a href="https://github.com/imathis/octopress/commit/3f842465bdd4e9dc2a735bb34a80fb6f78b387bb">here</a> .</p>

<p>Breaking it down, here is what you have to do :</p>

<blockquote><ul>
<li>Update to latest version of octopress.</li>
<li>In your <code>_config.yml</code> change <code>titlecase</code> from true to false.
That&#8217;s it. !</li>
</ul>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why are com.sun.management.ThreadMXBean methods disabled in JConsole]]></title>
    <link href="http://ajaygeorge.github.com/blog/2012/09/18/why-are-com-dot-sun-dot-management-dot-threadmxbean-methods-disabled-in-jconsole/"/>
    <updated>2012-09-18T00:13:00+05:30</updated>
    <id>http://ajaygeorge.github.com/blog/2012/09/18/why-are-com-dot-sun-dot-management-dot-threadmxbean-methods-disabled-in-jconsole</id>
    <content type="html"><![CDATA[<p>I had always wondered why some methods on the JConsole are disabled. You can see it in action if you check out the ThreadMXBean which is a part of the JDK
<img src="http://i.stack.imgur.com/38lh7.png"></p>

<p>I asked this question on SO and indeed got a wonderful reply.
Here is the reason :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Only primitives, primitive wrappers and  additional Classes such as BigDecimal.class, BigInteger.class, Number.class, String.class, ObjectName.class are allowed as arguments to valid methods.</span></code></pre></td></tr></table></div></figure>


<p>For the simple reason that JConsole does not know how to read up other objects as arguments to the exposed methods, they are disabled.
Read the complete discussion on SO <a href="http://stackoverflow.com/questions/12025003/why-are-some-methods-on-the-jconsole-disabled">here</a> .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Error in JLS]]></title>
    <link href="http://ajaygeorge.github.com/blog/2012/08/05/error-in-jls/"/>
    <updated>2012-08-05T22:22:00+05:30</updated>
    <id>http://ajaygeorge.github.com/blog/2012/08/05/error-in-jls</id>
    <content type="html"><![CDATA[<p>There was an interesting question on SO regarding the JLS.</p>

<blockquote><p>Is a member interface in a class declaration implicitly public?</p><footer><strong>StackOverflow</strong> <cite><a href='http://stackoverflow.com/questions/11638627/is-a-member-interface-in-a-class-declaration-implicitly-public/'>Link</a></cite></footer></blockquote>


<p>I got to answer the question correctly.
Turns out the JLS was indeed wrong !.</p>
]]></content>
  </entry>
  
</feed>
